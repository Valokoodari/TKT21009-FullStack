{"version":3,"sources":["services/Contacts.js","components/ContactForm.js","components/Contacts.js","components/Search.js","App.js","index.js"],"names":["baseUrl","getAll","axios","get","create","newContact","post","update","id","put","erase","delete","ContactForm","name","number","contacts","setName","setNumber","setContacts","setNotification","contactService","onSubmit","event","preventDefault","contactObject","some","contact","find","c","window","confirm","then","response","map","data","message","type","setTimeout","catch","error","concat","console","log","style","marginTop","marginLeft","value","onChange","target","Contact","onClick","filter","cContact","height","width","fontSize","Contacts","search","filtered","toLowerCase","includes","key","Search","text","setText","Notification","notification","className","App","useState","newName","setNewName","newNumber","setNewNumber","searchText","setSearchText","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87723a95.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n    return axios.get(baseUrl);\n}\n\nconst create = newContact => {\n    return axios.post(baseUrl, newContact);\n}\n\nconst update = (id, newContact) => {\n    return axios.put(`${baseUrl}/${id}`, newContact);\n}\n\nconst erase = id => {\n    return axios.delete(`${baseUrl}/${id}`);\n}\n\nexport default {\n    getAll: getAll,\n    create: create,\n    update: update,\n    erase: erase\n}","import React from \"react\";\n\nconst ContactForm = ({name, number, contacts, setName, setNumber, setContacts, setNotification, contactService}) => {\n    const handleNameChange = (event) => {\n        setName(event.target.value);\n    }\n    const handleNumberChange = (event) => {\n        setNumber(event.target.value);\n    }\n\n    const addContact = (event) => {\n        event.preventDefault();\n\n        const contactObject = {\n            name: name,\n            number: number\n        };\n\n        if (contacts.some(contact => name === contact.name)) {\n            const contact = contacts.find(c => c.name === name);\n            if (window.confirm(`Update the number of ${name}`)) {\n                contactService.update(contact.id, contactObject)\n                    .then(response => {\n                        setContacts(contacts.map(c => c.id !== contact.id ? c : response.data));\n                        setNotification({message: `Updated ${contactObject.name}`, type: \"Success\"});\n                        setTimeout(() => setNotification({message: null, type: null}), 5000);\n                    })\n                    .catch(error => {\n                        setNotification({message: `Cannot update ${contactObject.name}`, type: \"Error\"});\n                        setTimeout(() => setNotification({message: null, type: null}), 5000);\n                    });\n            }\n        } else {\n            contactService.create(contactObject)\n                .then(response => {\n                    setContacts(contacts.concat(response.data));\n                    setNotification({message: `Added ${contactObject.name}`, type: \"Success\"});\n                    setTimeout(() => setNotification({message: null, type: null}), 5000);\n                })\n                .catch(error => {\n                    console.log(error.response.data.error);\n                    setNotification({ message: `${error.response.data.error}`, type: \"Error\"});\n                    setTimeout(() => setNotification({message: null, type: null}), 5000);\n                });\n        }\n\n        setName(\"\");\n        setNumber(\"\");\n    }\n\n    return (\n        <form onSubmit={addContact}>\n            <div style={{marginTop: -15}}>\n                Name\n                <input style={{marginLeft: 19}}\n                    value={name}\n                    onChange={handleNameChange}\n                />\n            </div>\n            <div style={{marginTop: 5}}>\n                Number\n                <input style={{marginLeft: 5}}\n                    value={number}\n                    onChange={handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\" style={{marginTop: 5}}>Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm;","import React from 'react';\n\nconst Contacts = ({contacts, search, contactService, setContacts, setNotification}) => {\n    const filtered = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(search.toLowerCase())\n    );\n\n    return (\n        <div>\n            {filtered.map(contact =>\n                <Contact key={contact.id} contact={contact} contactService={contactService} contacts={contacts} setContacts={setContacts} setNotification={setNotification} />\n            )}\n        </div>\n    )\n}\n\nconst Contact = ({contact, contactService, contacts, setContacts, setNotification}) => (\n    <div>\n        &#8226; {contact.name} - {contact.number}\n        <button\n            onClick={() => {\n                if (window.confirm(`Delete ${contact.name}?`)) {\n                    contactService.erase(contact.id)\n                        .then(() => {\n                            setContacts(contacts.filter(cContact => cContact.id !== contact.id));\n                            setNotification({message: `Deleted ${contact.name}`, type: \"Success\"});\n                            setTimeout(() => setNotification({message: null, type: null}), 5000);\n                        })\n                        .catch(error => {\n                            setNotification({message: `Cannot delete ${contact.name}`, type: \"Error\"});\n                            setTimeout(() => setNotification({message: null, type: null}), 5000);\n                        });\n\n                }\n            }} \n            style={{marginLeft: 4, height: 15, width: 34, fontSize: 10}}>\n            <p style={{marginLeft: -4, marginTop: -1}}>delete</p>\n        </button>\n    </div>\n)\n\nexport default Contacts;","import React from \"react\";\n\nconst Search = ({text, setText}) => {\n    const handleSearchChange = (event) => {\n        setText(event.target.value);\n    }\n\n    return (\n        <div style={{marginTop: -15}}>\n            Search\n            <input style={{marginLeft: 11}}\n                value={text}\n                onChange={handleSearchChange}\n            />\n        </div>\n    )\n}\n\nexport default Search;","import React, { useState, useEffect } from \"react\";\nimport contactService from \"./services/Contacts.js\";\n\nimport ContactForm from \"./components/ContactForm.js\";\nimport Contacts from \"./components/Contacts.js\";\nimport Search from \"./components/Search.js\";\n\nconst Notification = ({notification}) => {\n    if (notification.message === null) {\n        return null;\n    }\n\n    if (notification.type === \"Error\") {\n        return (\n            <div className=\"error\">\n                {notification.message}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"success\">\n            {notification.message}\n        </div>\n    )\n}\n\nconst App = () => {\n    const [ contacts, setContacts] = useState([]);\n    const [ newName, setNewName ] = useState(\"\");\n    const [ newNumber, setNewNumber ] = useState(\"\");\n    const [ searchText, setSearchText ] = useState(\"\");\n    const [ notification, setNotification ] = useState({ message: null, type: null});\n\n    useEffect(() => {\n        contactService.getAll()\n            .then(response => setContacts(response.data));\n    }, []);\n\n    return (\n        <div>\n            <h1 style={{marginTop: -5}}>Phonebook</h1>\n            <Notification notification={notification} />\n\n            <Search text={searchText} setText={setSearchText}/>\n\n            <h2>Add a new contact</h2>\n            <ContactForm\n                name={newName}\n                number={newNumber}\n                contacts={contacts}\n                setName={setNewName}\n                setNumber={setNewNumber}\n                setContacts={setContacts}\n                setNotification={setNotification}\n                contactService={contactService}\n            />\n\n            <h2>Contacts</h2>\n            <Contacts\n                contacts={contacts}\n                search={searchText}\n                contactService={contactService}\n                setContacts={setContacts}\n                setNotification={setNotification}\n            />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}